<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="fishnet.Region">
<StorageStrategy/>
<Super>%Persistent</Super>
<TimeCreated>64479,59414.858678</TimeCreated>

<Property name="name">
<Type>%String</Type>
</Property>

<Property name="coordinates">
<Type>fishnet.Coordinate</Type>
<Collection>list</Collection>
</Property>

<Property name="resource">
<Type>fishnet.Resource</Type>
<Collection>list</Collection>
</Property>

<Method name="GetRegions">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	set st = $$$OK
	
	try{
		set proxy = {}
		set proxy.children = []
		
		&sql(DECLARE RgCur CURSOR FOR 
		 	 SELECT ID
		 	 FROM fishnet.Region)	
		
		&sql(OPEN RgCur)
		for  
		{	
			&sql(FETCH RgCur INTO :id) 
			quit:(SQLCODE '= 0)
			
			do proxy.children.%Push(##class(fishnet.Region).%OpenId(id).ToJSON())
		}
		
		&sql(CLOSE RgCur)
		
		do proxy.%ToJSON()
	}
	catch (ex){
		set st = ex.AsStatus()
	}
	
	quit st
]]></Implementation>
</Method>

<Method name="GetRegion">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set region = ##class(fishnet.Region).%OpenId(id,,.sc)
	
	quit:$$$ISERR(sc) sc
	
	set proxy = {}
	
	set proxy.name = region.name
	
	set proxy.coordinates = []
	
	for i=1:1:region.coordinates.Count(){
		set point = {}
		set point.longtude = region.coordinates.GetAt(i).longtude
		set point.latitude = region.coordinates.GetAt(i).latitude		
		do proxy.coordinates.%Push(point)	
	}	
	quit proxy.%ToJSON()
]]></Implementation>
</Method>

<Method name="SaveNewRegion">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st = $$$OK
		
	try{	
	
	$$$THROWONERROR(st, ##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.data,1))      	
      	// Create new region
      	set region = ##class(fishnet.Region).%New()
      	set region.name = $ZCONVERT(data.name, "I", "UTF8")
      	set region.coordinates = $ZCONVERT(data.coordinates, "I", "UTF8")     		
		$$$THROWONERROR(st, region.%Save())
	}
	catch ex{
		s st=st.AsStatus()
	}
	quit st
]]></Implementation>
</Method>

<Method name="GetResourceForRegion">
<Implementation><![CDATA[
	set region = $this
	set proxy = {}
]]></Implementation>
</Method>

<Method name="SetChangeOfRegion">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st = $$$OK
		
	try{	
	
	$$$THROWONERROR(st, ##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.data,1))
      	
      	// Open region by ID
      	set region = ##class(fishnet.Region).%OpenId(data.id,,.st)
      	set region.name = ""
       	set region.coordinates = ""
      	set region.name = $ZCONVERT(data.name, "I", "UTF8")
      	set region.coordinates = $ZCONVERT(data.coordinates, "I", "UTF8")     		
		$$$THROWONERROR(st, region.%Save())
	}
	catch ex{
		s st=st.AsStatus()
	}
	quit st
]]></Implementation>
</Method>

<Method name="ToJSON">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

 set region = $this

 set proxy = {}

 set proxy.name = region.name

 set proxy.coordinates = []

 for i=1:1:region.coordinates.Count(){

 	set point = {}

 	set point.longtude = region.coordinates.GetAt(i).longtude

	set point.latitude = region.coordinates.GetAt(i).latitude		

 	do proxy.coordinates.%Push(point)	

 }	

 	quit proxy.%ToJSON()
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// Method SetPointForRegion(latitude As %Decimal, longtude As %Decimal) As %Status

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// {

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// set coord = ##class(fishnet.Coordinate).%New()

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// set coord.latitude = latitude

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	set coord.longtude = longtude

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	do ..coordinates.Insert(coord)

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	do ..%Save()

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	q $$$OK

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// }

]]></Content>
</UDLText>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^fishnet.RegionD</DataLocation>
<DefaultData>RegionDefaultData</DefaultData>
<IdLocation>^fishnet.RegionD</IdLocation>
<IndexLocation>^fishnet.RegionI</IndexLocation>
<StreamLocation>^fishnet.RegionS</StreamLocation>
<Data name="RegionDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>name</Value>
</Value>
<Value name="3">
<Value>coordinates</Value>
</Value>
<Value name="4">
<Value>resource</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
